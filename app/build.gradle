plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id("com.google.gms.google-services")
    id 'com.google.firebase.crashlytics'
    id 'dagger.hilt.android.plugin'
    id 'org.barfuin.gradle.jacocolog'
    id 'jacoco'
}

android {
    namespace 'com.bytesdrawer.budgetplanner'
    compileSdk 34

    defaultConfig {
        applicationId 'com.bytesdrawer.budgetplanner'
        minSdk 26
        targetSdk 34
        versionCode 38
        versionName "1.1.2"

        buildConfigField("String", "AWS_ENDPOINT", AWS_ENDPOINT)
        buildConfigField("String", "GOOGLE_CLIENT_ID", GOOGLE_CLIENT_ID)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    tasks.register('jacocoCodeTestCoverageReport', JacocoReport) {
        dependsOn 'testDebugUnitTest'
        reports {
            html.required.set(true)
            html.outputLocation = layout.buildDirectory.dir('reports/jacoco')
        }
        def mainSrc = "${project.projectDir}/src/main/java"
        def kotlinTree = fileTree(
                dir: "$project.buildDir/tmp/kotlin-classes/debug",
                excludes: [
                        '**/databinding/*Binding.*',
                        '**/R.class',
                        '**/R$*.class',
                        '**/BuildConfig.*',
                        '**/Manifest*.*',
                        '**/*Test*.*',
                        'android/**/*.*',
                        // butterKnife
                        '**/*$ViewInjector*.*',
                        '**/*$ViewBinder*.*',
                        '**/Lambda$*.class',
                        '**/Lambda.class',
                        '**/*Lambda.class',
                        '**/*Lambda*.class',
                        '**/*_MembersInjector.class',
                        '**/Dagger*Component*.*',
                        '**/*Module_*Factory.class',
                        '**/di/module/*',
                        '**/*_Factory*.*',
                        '**/*Module*.*',
                        '**/*Dagger*.*',
                        '**/*Hilt*.*',
                        // kotlin
                        '**/*MapperImpl*.*',
                        '**/*$ViewInjector*.*',
                        '**/*$ViewBinder*.*',
                        '**/BuildConfig.*',
                        '**/*Component*.*',
                        '**/*BR*.*',
                        '**/Manifest*.*',
                        '**/*$Lambda$*.*',
                        '**/*Companion*.*',
                        '**/*Module*.*',
                        '**/*Dagger*.*',
                        '**/*Hilt*.*',
                        '**/*MembersInjector*.*',
                        '**/*_MembersInjector.class',
                        '**/*_Factory*.*',
                        '**/*_Provide*Factory*.*',
                        '**/*Extensions*.*'
                ]
        )
        sourceDirectories.from = file(mainSrc)
        classDirectories.from = files(kotlinTree)
        executionData.from = fileTree(dir: project.buildDir, includes: ['**/*.exec'])
    }

    tasks.withType(Test).configureEach {
        jacoco {
            includeNoLocationClasses true
            excludes = ["*"]
        }
        testLogging {
            exceptionFormat "full"
            events "started", "skipped", "passed", "failed"
            showStandardStreams true
        }
    }

    kapt {
        javacOptions {
            option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
        viewBinding true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    bundle {
        language {
            enableSplit = true
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.work:work-runtime-ktx:2.8.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation platform('androidx.compose:compose-bom:2023.06.01')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation "androidx.navigation:navigation-compose:2.5.1"
    implementation 'com.google.android.gms:play-services-ads:22.5.0'
    implementation "androidx.compose.runtime:runtime-livedata"
    implementation "com.github.skydoves:colorpicker-compose:1.0.2"
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation "androidx.compose.ui:ui-viewbinding:1.4.3"

    // Excel
    implementation 'org.apache.poi:poi-ooxml:5.2.2'
    implementation 'org.apache.xmlbeans:xmlbeans:5.0.3'
    implementation 'javax.xml.stream:stax-api:1.0-2'
    implementation 'com.fasterxml:aalto-xml:1.3.2'

    // Room
    implementation("androidx.room:room-runtime:2.5.1")
    kapt "androidx.room:room-compiler:2.5.1"
    implementation "androidx.room:room-ktx:2.5.1"

    // Coil
    implementation("io.coil-kt:coil-compose:2.4.0")

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.7.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'
    implementation 'com.squareup.okio:okio:3.3.0'
    implementation 'com.google.code.gson:gson:2.9.0'

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-android-compiler:2.42"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    kapt("org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.4.2")

    // Test
    androidTestImplementation platform('androidx.compose:compose-bom:2023.06.01')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.room:room-testing:2.5.1"
    testImplementation 'org.robolectric:robolectric:4.10.3'
    testImplementation 'androidx.test:core-ktx:1.5.0'
    testImplementation 'androidx.test.ext:junit-ktx:1.1.5'
    testImplementation("org.jetbrains.compose.ui:ui-test-junit4:1.2.1")
    testImplementation 'org.mockito:mockito-core:5.7.0'

    // Firebase
    implementation(platform("com.google.firebase:firebase-bom:32.2.3"))
    implementation("com.google.firebase:firebase-analytics-ktx")
    implementation "com.google.firebase:firebase-crashlytics-ktx"

    // Google Play
    implementation("com.google.android.play:review:2.0.1")
    implementation("com.google.android.play:review-ktx:2.0.1")
    implementation("com.android.billingclient:billing:6.0.1")
    implementation("com.android.billingclient:billing-ktx:6.0.1")
    implementation 'com.google.android.gms:play-services-auth:20.7.0'

    // Auth
    implementation(project(":AuthModule"))
}